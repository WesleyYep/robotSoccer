/*
	Fuzzy Logic for BLAZE Robot Soccer
*/

FUNCTION_BLOCK blaze	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	angle : REAL; // angle to target
	distance : REAL; // distance to target
END_VAR

VAR_OUTPUT				// Define output variable
	linear : REAL;
	angular : REAL;
END_VAR

FUZZIFY angle			// Fuzzify input variable 'angle': {'small', 'medium' , 'large'}
	TERM small := trape -20 -5 5 20 ; 
	TERM medium1 := (-55, 0) (-40, 1) (-15, 1) (-10, 0);
	TERM medium2 := (10, 0) (15, 1) (40, 1) (55, 0);
	TERM large1 := (-90, 1) (-40, 0);
	TERM large2 := (40, 0) (90, 1);
END_FUZZIFY

FUZZIFY distance			// Fuzzify input variable 'distance': { 'veryclose', 'close' 'far' }
	TERM veryclose := (0, 1) (0.25, 0) ;
	TERM close := (0.15, 0) (0.2, 1) (0.45, 1) (0.55, 0) ;
	TERM far := (0.50, 0) (0.8, 1) ;
END_FUZZIFY

DEFUZZIFY linear			// Defzzzify output variable 'linear' : {'slow', 'medium', 'fast' }
	TERM slow := (0,1) (0.4, 0) ;
	TERM medium := (0.35, 0) (0.45, 1) (0.55, 1) (0.65, 0);
	TERM fast := (0.60, 0) (0.85, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY angular			// Defzzzify output variable 'angular' : {'small', 'medium', 'large' }
	TERM small := (-20, 0) (-5, 1) (5, 1) (20, 0) ;
	TERM medium1 := (-55, 0) (-40, 1) (-15, 1) (-10, 0);
	TERM medium2 := (10, 0) (15, 1) (40, 1) (55, 0) ;
	TERM large1 := (-90, 1) (-40, 0);
	TERM large2 := (40, 0) (90, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF angle IS small AND distance IS veryclose THEN linear IS slow;
	RULE 2 : IF angle IS small AND distance IS veryclose THEN angular IS small;

	RULE 3 : IF angle IS small AND distance IS close THEN linear IS medium;
	RULE 4 : IF angle IS small AND distance IS close THEN angular IS small;
	
	RULE 5 : IF angle IS small AND distance IS far THEN linear IS fast;
	RULE 6 : IF angle IS small AND distance IS far THEN angular IS small;
	
	RULE 7 : IF angle IS medium1 AND distance IS veryclose THEN linear IS slow;
	RULE 8 : IF angle IS medium1 AND distance IS veryclose THEN angular IS medium1;
	
	RULE 9 : IF angle IS medium1 AND distance IS close THEN linear IS medium;
	RULE 10 : IF angle IS medium1 AND distance IS close THEN angular IS small;
	
	RULE 11 : IF angle IS medium1 AND distance IS far THEN linear IS medium;
	RULE 12 : IF angle IS medium1 AND distance IS far THEN angular IS small;
	
	RULE 13 : IF angle IS medium2 AND distance IS veryclose THEN linear IS slow;
	RULE 14 : IF angle IS medium2 AND distance IS veryclose THEN angular IS medium2;
	
	RULE 15 : IF angle IS medium2 AND distance IS close THEN linear IS medium;
	RULE 16 : IF angle IS medium2 AND distance IS close THEN angular IS small;
	
	RULE 17 : IF angle IS medium2 AND distance IS far THEN linear IS medium;
	RULE 18 : IF angle IS medium2 AND distance IS far THEN angular IS small;
	
	RULE 19 : IF angle IS large1 AND distance IS veryclose THEN linear IS slow;
	RULE 20 : IF angle IS large1 AND distance IS veryclose THEN angular IS large1;
	
	RULE 21 : IF angle IS large1 AND distance IS close THEN linear IS slow;
	RULE 22 : IF angle IS large1 AND distance IS close THEN angular IS large1;
	
	RULE 23 : IF angle IS large1 AND distance IS far THEN linear IS medium;
	RULE 24 : IF angle IS large1 AND distance IS far THEN angular IS medium1;

	RULE 25 : IF angle IS large2 AND distance IS veryclose THEN linear IS slow;
	RULE 26 : IF angle IS large2 AND distance IS veryclose THEN angular IS large2;
	
	RULE 27 : IF angle IS large2 AND distance IS close THEN linear IS slow;
	RULE 28 : IF angle IS large2 AND distance IS close THEN angular IS large2;
	
	RULE 29 : IF angle IS large2 AND distance IS far THEN linear IS medium;
	RULE 30 : IF angle IS large2 AND distance IS far THEN angular IS medium2;

END_RULEBLOCK

END_FUNCTION_BLOCK

